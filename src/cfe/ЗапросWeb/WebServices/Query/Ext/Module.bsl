
Функция ПривестиПараметр(Значение)
	
	Если ТипЗнч(Значение) = Тип("NULL") Или ТипЗнч(Значение) = Тип("НеОпределено") Или ТипЗнч(Значение) = Тип("Булево") 
			Или ТипЗнч(Значение) = Тип("Дата") Или ТипЗнч(Значение) = Тип("Число") Или ТипЗнч(Значение) = Тип("УникальныйИдентификатор") Тогда
		Возврат Значение;
	ИначеЕсли Не ТипЗнч(Значение) = Тип("Строка") Тогда
		ВызватьИсключение "Неверное значение параметра ";
	ИначеЕсли Лев(Значение, 1) = "S" Тогда
		Возврат Сред(Значение, 2);
	ИначеЕсли Лев(Значение, 1) = "#" Тогда
		Позиция = Найти(Значение, ":");
		Если Позиция = 0 Тогда
			ВызватьИсключение "Неверное значение параметра ";
		КонецЕсли;
		
		ТипЗначение = Сред(Значение, 2, Позиция-2);
		УникальныйИдентификатор = Сред(Значение, Позиция+1);
		
		Попытка
			Менеджер = Новый(Тип(СтрЗаменить(ТипЗначение, ".", "Менеджер.")));
			Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(УникальныйИдентификатор));
		Исключение
			ВызватьИсключение "Неверное значение параметра ";
		КонецПопытки;
	Иначе
		ВызватьИсключение "Неверное значение параметра ";
	КонецЕсли;
	
КонецФункции

Функция Параметры(ПараметрыВходящие, Ошибки)
	
	Параметры = Новый Структура;
	
	Для Каждого Параметр Из ПараметрыВходящие Цикл
		Попытка
			Если ТипЗнч(Параметр.Значение) = Тип("Строка") И Лев(Параметр.Значение, 1) = "A" Тогда
				Массив = ЗначениеИзСтрокиВнутр(Сред(Параметр.Значение, 2));
				Если Не ТипЗнч(Массив) = Тип("Массив") Тогда
					ВызватьИсключение "Неверное значение параметра ";
				КонецЕсли;
				
				Значение = Новый Массив;
				Для Каждого Элемент Из Массив Цикл
					Значение.Добавить(ПривестиПараметр(Элемент));
				КонецЦикла;
			Иначе
				Значение = ПривестиПараметр(Параметр.Значение);
			КонецЕсли;
		Исключение
			Ошибки = Ошибки + Символы.ПС + ОписаниеОшибки() + " """ + Параметр.Имя + """!";
		КонецПопытки;
		
		Параметры.Вставить(Параметр.Имя, Значение);
	КонецЦикла;
	
	Возврат Параметры;
	
КонецФункции

Функция ВычислитьЗначениеКолонки(Метод, ДанныеСтроки)
	
	Возврат Вычислить(Метод);
	
КонецФункции

Функция ВыполнитьЗапрос(ВебЗапрос)
	
	// 1. Инициализация ответа
	ТипОтвет = ФабрикаXDTO.Тип("http://www.1cnw.ru/query", "Ответ");
	ТипКолонкаОтвета = ФабрикаXDTO.Тип("http://www.1cnw.ru/query", "Колонка");
	
	Ответ = ФабрикаXDTO.Создать(ТипОтвет);
	Ответ.Ошибка = "";
	Ответ.Результат = "";
	
	// 2. Инициализация запроса
	Запрос = Новый Запрос;
	Запрос.Текст = ВебЗапрос.Текст;
	
	Параметры = Параметры(ВебЗапрос.Параметры, Ответ.Ошибка);
	
	Если Не Ответ.Ошибка = "" Тогда
		Возврат Ответ;
	КонецЕсли;
	
	Для Каждого Параметр Из Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	// 3. Выполнение запроса
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		Ответ.Ошибка = ОписаниеОшибки();
		
		Возврат Ответ;
	КонецПопытки;
	
	// 4. Получение данных запроса
	Если ВебЗапрос.Упрощенный Тогда
		Результат = РезультатЗапроса.Выгрузить();
	Иначе
		// Преобразование ссылочных типов
		Выборка = РезультатЗапроса.Выбрать();
		Результат = Новый ТаблицаЗначений;
	КонецЕсли;
	
	КолонкиЗапроса = Новый Массив;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		КолонкиЗапроса.Добавить(Новый Структура("Имя, ТипЗначения, Метод", Колонка.Имя, Колонка.ТипЗначения));
	КонецЦикла;
	
	Для Каждого ДополнительнаяКолонка Из ВебЗапрос.ДополнительныеКолонки Цикл
		КолонкиЗапроса.Добавить(Новый Структура("Имя, ТипЗначения, Метод", ДополнительнаяКолонка.Имя, Новый ОписаниеТипов, ДополнительнаяКолонка.Метод));
	КонецЦикла;
	
	// 6. Заполнение колонок ответа
	Для Каждого Колонка Из КолонкиЗапроса Цикл
		КолонкаОтвета = ФабрикаXDTO.Создать(ТипКолонкаОтвета);
		КолонкаОтвета.Имя = Колонка.Имя;
		
		КолонкаОтвета.Булево = Ложь;
		КолонкаОтвета.Дата = Ложь;
		КолонкаОтвета.Строка = Ложь;
		КолонкаОтвета.Ссылка = Ложь;
		КолонкаОтвета.УникальныйИдентификатор = Ложь;
		КолонкаОтвета.ХранилищеЗначения = Ложь;
		КолонкаОтвета.Число = Ложь;
		
		Типы = Колонка.ТипЗначения.Типы();
		ТипыРезультат = Новый Массив;
		
		Для Каждого Тип Из Типы Цикл
			Если Тип = Тип("NULL") Тогда
				// Отсутствие значения
				ТипыРезультат.Добавить(Тип("NULL"));
			ИначеЕсли Тип = Тип("Булево") Тогда
				КолонкаОтвета.Булево = Истина;
				ТипыРезультат.Добавить(Тип("Булево"));
			ИначеЕсли Тип = Тип("Дата") Тогда
				КолонкаОтвета.Булево = Истина;
				ТипыРезультат.Добавить(Тип("Дата"));
			ИначеЕсли Тип = Тип("Строка") Тогда
				КолонкаОтвета.Строка = Истина;
				ТипыРезультат.Добавить(Тип("Строка"));
			ИначеЕсли Тип = Тип("УникальныйИдентификатор") Тогда
				КолонкаОтвета.УникальныйИдентификатор = Истина;
				ТипыРезультат.Добавить(Тип("УникальныйИдентификатор"));
			ИначеЕсли Тип = Тип("ХранилищеЗначения") Тогда
				КолонкаОтвета.ХранилищеЗначения = Истина;
				ТипыРезультат.Добавить(Тип("Структура"));
			ИначеЕсли Тип = Тип("Число") Тогда
				КолонкаОтвета.Число = Истина;
				ТипыРезультат.Добавить(Тип("Число"));
			Иначе
				Попытка
					ПустоеЗначение = Новый(Тип);
					ТипМетаданные = ПустоеЗначение.Метаданные();
					
					КолонкаОтвета.Ссылка = Истина;
					ТипыРезультат.Добавить(Тип("Структура"));
				Исключение
					ВызватьИсключение "Неизвестный тип " + Тип + "!" + ОписаниеОшибки();
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		
		Ответ.Колонки.Добавить(КолонкаОтвета);
		
		Если Не ВебЗапрос.Упрощенный Тогда
			Попытка
				Результат.Колонки.Добавить(Колонка.Имя, Новый ОписаниеТипов(ТипыРезультат));
			Исключение
				Ответ.Ошибка = ОписаниеОшибки() + " """ + Колонка.Имя + """!";
				
				Возврат Ответ;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	// 7. Заполнение результата ответа (для не упрощенного услучая)
	Если Не ВебЗапрос.Упрощенный Тогда
		// 7.1 Сбор сведений о перечислениях
		ЗначенияПеречислений = Новый Соответствие;
		
		Для Каждого ПеречислениеМД Из Метаданные.Перечисления Цикл
			Значение = Новый Структура("Тип, Значение", "Перечисление." + ПеречислениеМД.Имя, "");
			ЗначенияПеречислений.Вставить(Перечисления[ПеречислениеМД.Имя].ПустаяСсылка(), Значение);
			
			Для Каждого ЗначениеПеречисления Из ПеречислениеМД.ЗначенияПеречисления Цикл
				Значение = Новый Структура("Тип, Значение", "Перечисление." + ПеречислениеМД.Имя, ЗначениеПеречисления.Имя);
				ЗначенияПеречислений.Вставить(Перечисления[ПеречислениеМД.Имя][ЗначениеПеречисления.Имя], Значение);
			КонецЦикла;
		КонецЦикла;
		
		// 7.2 Заполнение таблицы результата
		Пока Выборка.Следующий() Цикл
			Строка = Результат.Добавить();
			
			Для Каждого Колонка Из КолонкиЗапроса Цикл
				Если Колонка.Метод = НеОпределено Тогда
					Значение = Выборка[Колонка.Имя];
				Иначе
					Значение = ВычислитьЗначениеКолонки(Колонка.Метод, Выборка);
				КонецЕсли;
				
				Если Не ЗначенияПеречислений[Значение] = НеОпределено Тогда
					Значение = ЗначенияПеречислений[Значение];
				ИначеЕсли ТипЗнч(Значение) = Тип("ХранилищеЗначения") Тогда
					Значение = Новый Структура("Тип, Значение", "ХранилищеЗначения", ЗначениеВСтрокуВнутр(Значение));
				Иначе
					Попытка
						ЗначениеМД = Значение.Метаданные();
					Исключение
						ЗначениеМД = НеОпределено;
					КонецПопытки;
					
					Если Не ЗначениеМД = НеОпределено Тогда
						Значение = Новый Структура("Тип, Значение", ЗначениеМД.ПолноеИмя(), Значение.УникальныйИдентификатор());
					КонецЕсли;
				КонецЕсли;
				
				Строка[Колонка.Имя] = Значение;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Ответ.Результат = ЗначениеВСтрокуВнутр(Результат);
	
	Возврат Ответ;
	
КонецФункции
